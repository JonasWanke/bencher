import { createEffect, createSignal } from "solid-js";
import { SwaggerUIBundle } from "swagger-ui-dist";
import { Language } from "../../i18n/ui";
import {
	BENCHER_CLOUD,
	BENCHER_SELF_HOSTED,
	isBencherCloud,
	swaggerSpec,
} from "../../util/ext";

export interface Props {
	apiUrl: string;
	lang: undefined | string | Language;
}

const apiEndpoint = (lang: Language) => {
	switch (lang) {
		case Language.en:
			return "API Endpoint";
		case Language.de:
			return "API Endpunkt";
		case Language.es:
			return "Punto final de la API";
		case Language.fr:
			return "Point de terminaison de l'API";
		case Language.ja:
			return "API„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà";
		case Language.ko:
			return "API ÏóîÎìú Ìè¨Ïù∏Ìä∏";
		case Language.pt:
			return "Ponto de extremidade da API";
		case Language.ru:
			return "–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ API";
		case Language.zh:
			return "APIÁ´ØÁÇπ";
	}
};

const viewApiSpec = (lang: Language) => {
	switch (lang) {
		case Language.en:
			return "View OpenAPI Spec";
		case Language.de:
			return "OpenAPI-Spezifikation anzeigen";
		case Language.es:
			return "Ver especificaci√≥n OpenAPI";
		case Language.fr:
			return "Voir la sp√©cification OpenAPI";
		case Language.ja:
			return "OpenAPI‰ªïÊßò„ÇíË°®Á§∫";
		case Language.ko:
			return "OpenAPI ÏÇ¨ÏñëÎ≥¥Í∏∞";
		case Language.pt:
			return "Ver especifica√ß√£o OpenAPI";
		case Language.ru:
			return "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é OpenAPI";
		case Language.zh:
			return "Êü•ÁúãOpenAPIËßÑËåÉ";
	}
};

const rustClient = (lang: Language) => {
	switch (lang) {
		case Language.en:
			return "Rust Client";
		case Language.de:
			return "Rust Client";
		case Language.es:
			return "Cliente Rust";
		case Language.fr:
			return "Client Rust";
		case Language.ja:
			return "Rust„ÇØ„É©„Ç§„Ç¢„É≥„Éà";
		case Language.ko:
			return "Rust ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏";
		case Language.pt:
			return "Cliente Rust";
		case Language.ru:
			return "–ö–ª–∏–µ–Ω—Ç Rust";
		case Language.zh:
			return "RustÂÆ¢Êà∑Á´Ø";
	}
};

const rustClientText = (lang: Language) => {
	switch (lang) {
		case Language.en:
			return "If you're writing in Rust consider using the Bencher Rust API Client.";
		case Language.de:
			return "Wenn Sie in Rust schreiben, sollten Sie den Bencher Rust API Client verwenden.";
		case Language.es:
			return "Si est√° escribiendo en Rust, considere usar el cliente de API Rust de Bencher.";
		case Language.fr:
			return "Si vous √©crivez en Rust, envisagez d'utiliser le client API Rust de Bencher.";
		case Language.ja:
			return "Rust„ÅßÊõ∏„ÅÑ„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„ÄÅBencher Rust API„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çí‰ΩøÁî®„Åô„Çã„Åì„Å®„ÇíÊ§úË®é„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ";
		case Language.ko:
			return "RustÎ°ú ÏûëÏÑ±ÌïòÎäî Í≤ΩÏö∞ Bencher Rust API ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î•º ÏÇ¨Ïö©ÌïòÎäî Í≤ÉÏù¥ Ï¢ãÏäµÎãàÎã§.";
		case Language.pt:
			return "Se voc√™ est√° escrevendo em Rust, considere usar o cliente de API Rust do Bencher.";
		case Language.ru:
			return "–ï—Å–ª–∏ –≤—ã –ø–∏—à–µ—Ç–µ –Ω–∞ Rust, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç API Rust Bencher.";
		case Language.zh:
			return "Â¶ÇÊûúÊÇ®‰ΩøÁî®RustÁºñÂÜôÔºåËØ∑ËÄÉËôë‰ΩøÁî®Bencher Rust API Client„ÄÇ";
	}
};

const SwaggerPanel = (props: Props) => {
	const lang = (props.lang as Language) ?? Language.en;
	const [url, setUrl] = createSignal("");

	createEffect(() => {
		const [url, swagger] = swaggerSpec(props.apiUrl);
		setUrl(url);
		SwaggerUIBundle({
			dom_id: "#swagger",
			spec: swagger,
			layout: "BaseLayout",
		});
	});

	return (
		<div class="content">
			<blockquote>
				<nav class="level">
					<div class="level-left">
						<div class="level-item">
							<p>
								üê∞ {isBencherCloud() ? BENCHER_CLOUD : BENCHER_SELF_HOSTED}{" "}
								{apiEndpoint(lang)}:{" "}
								<code>
									<a
										href={`${url()}/v0/server/version`}
										target="_blank"
										rel="noreferrer"
									>
										{url()}
									</a>
								</code>
							</p>
						</div>
					</div>

					<div class="level-right">
						<a
							class="button is-fullwidth"
							href={`${url()}/v0/server/spec`}
							target="_blank"
							rel="noreferrer"
						>
							{viewApiSpec(lang)}
						</a>
					</div>
				</nav>
			</blockquote>
			<h2>ü¶Ä {rustClient(lang)}</h2>
			<p>{rustClientText(lang)}</p>
			<code>
				bencher_client = {"{"} git = "https://github.com/bencherdev/bencher",
				branch = "main" {"}"}
			</code>
			<hr />
			<div id="swagger" />
			<br />
		</div>
	);
};

export default SwaggerPanel;
