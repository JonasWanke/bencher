---
import DocsLayout from "../../../../layouts/docs/DocsLayout.astro";
import AuthOverride from "../../../../components/auth/AuthOverride";
import AddAnApiToken from "../../../../components/docs/override/AddAnApiToken";
import { Language, signupId, tokenId } from "../../../../i18n/ui";
import Disclosure from "../../../../components/docs/Disclosure";
import { Collection } from "../../../../content/config";
import { getLangPaths } from "../../../../i18n/utils";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const pages = await getLangPaths(Collection.tutorial);
  return pages.filter(page => page.params.slug === "quick-start");
}
// 2. When it's time to render, you can get the entry directly from the prop
const lang = Astro.params.lang as Language;

const signupText = () => {
  switch (lang) {
    case Language.de:
      return "Sie sind für Bencher Cloud angemeldet";
    case Language.es:
      return "Estás registrado en Bencher Cloud";
    case Language.fr:
      return "Vous êtes inscrit à Bencher Cloud";
    case Language.ja:
      return "ベンチャー クラウド にサインアップしています";
    case Language.pt:
      return "Você está inscrito no Bencher Cloud";
    case Language.ru:
      return "Вы зарегистрированы в Bencher Cloud";
    case Language.zh:
      return "您已注册 Bencher Cloud";
    default:
      return "You are signed up for Bencher Cloud";
  }
}

const tokenText = () => {
  switch (lang) {
    case Language.de:
      return "Fügen Sie ein API-Token hinzu";
    case Language.es:
      return "Añadir un token de API";
    case Language.fr:
      return "Ajouter un jeton API";
    case Language.ja:
      return "API トークンを追加する";
    case Language.pt:
      return "Adicionar um token de API";
    case Language.ru:
      return "Добавить токен API";
    case Language.zh:
      return "添加 API 令牌";
    default:
      return "Add an API Token";
  }
}

const page = Astro.props;
const { Content } = await page.render();
---

<DocsLayout
  title={page?.data?.title}
  description={page?.data?.description}
  heading={page?.data?.heading}
  lang={lang}
>
  <Content />
  <AuthOverride client:only="solid-js" elementId={signupId}>
    <h4 id={signupId}>✅ {signupText}</h4>
  </AuthOverride>
  <AuthOverride client:only="solid-js" elementId={tokenId}>
    <h4 id={tokenId}>
      <AddAnApiToken client:only="solid-js" text={tokenText()} />
    </h4>
  </AuthOverride>

  <Disclosure slug="quick-start" lang={lang} />
</DocsLayout>
